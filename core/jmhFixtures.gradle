// Copyright (c) 2021 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

description = 'Script plugin to add jmh dependencies to other modules'
apply plugin: 'java'

configurations {
    outputDirs

    // This configuration holds dependencies to libraries or another projects
    // and will be placed on jmhFixtures source set's classpath.
    jmhFixturesCompile.extendsFrom compile
    jmhFixturesRuntime.extendsFrom runtime, jmhFixturesCompile

    // Following two configurations adds compiled jmhFixtures classes to the
    // jmhFixtures* source sets so it can be used by other projects as a
    // dependency target.
    jmhFixturesUsageCompile.extendsFrom jmhFixturesCompile, outputDirs
    jmhFixturesUsageRuntime.extendsFrom jmhFixturesRuntime, jmhFixturesUsageCompile
}

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.output
        compileClasspath += configurations.jmhFixturesCompile
        compileClasspath += sourceSets.main.runtimeClasspath
        compileClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath = output + compileClasspath + configurations.jmhFixturesRuntime
    }

}

dependencies {
    outputDirs sourceSets.jmh.output
    jmhFixturesUsageCompile project(project.path)
    jmhFixturesCompile('org.openjdk.jmh:jmh-core:1.27')
    jmhFixturesCompile('org.openjdk.jmh:jmh-generator-annprocess:1.27')
}
